{
  "id": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
  "name": "API PartyManagement",
  "description": "",
  "order": [],
  "folders": [
    {
      "id": "f28be121-ec12-11e8-b9ad-43a9ab025a51",
      "name": "TC_individual_POST_N1 - Create Resource with minimal parameters",
      "description": "",
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "order": [
        "f28c0830-ec12-11e8-b9ad-43a9ab025a51",
        "f28c0831-ec12-11e8-b9ad-43a9ab025a51"
      ],
      "owner": 231421,
      "folders_order": []
    },
    {
      "id": "f28c0832-ec12-11e8-b9ad-43a9ab025a51",
      "name": "TC_organization_POST_N1 - Create Resource with minimal parameters",
      "description": "",
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "order": [
        "f28c0833-ec12-11e8-b9ad-43a9ab025a51",
        "f28c2f40-ec12-11e8-b9ad-43a9ab025a51"
      ],
      "owner": 231421,
      "folders_order": []
    },
    {
      "id": "f28c2f41-ec12-11e8-b9ad-43a9ab025a51",
      "name": "TC_hub_POST_N1 - Create Resource with minimal parameters",
      "description": "",
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "order": [
        "f28c2f42-ec12-11e8-b9ad-43a9ab025a51",
        "f28c2f43-ec12-11e8-b9ad-43a9ab025a51"
      ],
      "owner": 231421,
      "folders_order": []
    },
    {
      "id": "f28c2f44-ec12-11e8-b9ad-43a9ab025a51",
      "name": "TC_individual_POST_E1 - Create Resource with missing mandatory parameter",
      "description": "",
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "order": [
        "f28c2f45-ec12-11e8-b9ad-43a9ab025a51",
        "f28c2f46-ec12-11e8-b9ad-43a9ab025a51"
      ],
      "owner": 231421,
      "folders_order": []
    },
    {
      "id": "f28c2f47-ec12-11e8-b9ad-43a9ab025a51",
      "name": "TC_organization_POST_E1 - Create Resource with missing mandatory parameter",
      "description": "",
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "order": [
        "f28c2f48-ec12-11e8-b9ad-43a9ab025a51"
      ],
      "owner": 231421,
      "folders_order": []
    },
    {
      "id": "f28c2f49-ec12-11e8-b9ad-43a9ab025a51",
      "name": "TC_hub_POST_E1 - Create Resource with missing mandatory parameter",
      "description": "",
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "order": [
        "f28c2f4a-ec12-11e8-b9ad-43a9ab025a51"
      ],
      "owner": 231421,
      "folders_order": []
    },
    {
      "id": "f28c2f4b-ec12-11e8-b9ad-43a9ab025a51",
      "name": "TC_individual_POST_N1 - Create Resource with maximal parameters",
      "description": "",
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "order": [
        "f28c2f4c-ec12-11e8-b9ad-43a9ab025a51",
        "f28c5650-ec12-11e8-b9ad-43a9ab025a51",
        "f28c5651-ec12-11e8-b9ad-43a9ab025a51"
      ],
      "owner": 231421,
      "folders_order": []
    },
    {
      "id": "f28c5652-ec12-11e8-b9ad-43a9ab025a51",
      "name": "TC_organization_POST_N1 - Create Resource with maximal parameters",
      "description": "",
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "order": [
        "f28c5653-ec12-11e8-b9ad-43a9ab025a51",
        "f28c5654-ec12-11e8-b9ad-43a9ab025a51",
        "f28c5655-ec12-11e8-b9ad-43a9ab025a51"
      ],
      "owner": 231421,
      "folders_order": []
    },
    {
      "id": "f28c5656-ec12-11e8-b9ad-43a9ab025a51",
      "name": "TC_hub_POST_N1 - Create Resource with maximal parameters",
      "description": "",
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "order": [
        "f28c5657-ec12-11e8-b9ad-43a9ab025a51",
        "f28c5658-ec12-11e8-b9ad-43a9ab025a51"
      ],
      "owner": 231421,
      "folders_order": []
    }
  ],
  "folders_order": [],
  "timestamp": 1542642675762,
  "owner": 231421,
  "public": false,
  "requests": [
    {
      "id": "f28c0830-ec12-11e8-b9ad-43a9ab025a51",
      "name": "individualCreate",
      "description": "",
      "headers": "Accept: application/json\nContent-Type: application/json\n",
      "headerData": [
        {
          "key": "Accept",
          "value": "application/json",
          "description": "",
          "enabled": true
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "description": "",
          "enabled": true
        }
      ],
      "url": "{{host}}{{path}}/individual",
      "folder": "f28be121-ec12-11e8-b9ad-43a9ab025a51",
      "queryParams": [],
      "preRequestScript": "",
      "method": "POST",
      "data": [],
      "dataMode": "raw",
      "version": 2,
      "tests": "tests[\"Content-Type is present \" + postman.getResponseHeader(\"Content-type\")] = postman.getResponseHeader(\"Content-type\");\ntests[\"Status code is 201\"] = responseCode.code === 201;\ntests[\"Response contains location header\"] = responseHeaders.hasOwnProperty(\"Location\");\ntests[\"Location header is correct\"] = responseHeaders.hasOwnProperty(\"Location\") &&\n\t(c.toString() == environment[\"path\"] + \"/individual/\" + JSON.parse(responseBody).id || //relative\n\tpostman.getResponseHeader(\"Location\").toString() == environment[\"host\"] + environment[\"path\"] + \"/individual/\" + JSON.parse(responseBody).id);   //absolute\ntests[\"Response contains all required fields\"] = findFieldsInBody([\"givenName\",\"familyName\",\"id\",\"href\"], JSON.parse(responseBody));\n\nfunction findFieldInBody(field,body) {\n\tfor (var key in body) {\n\t\tif (key == field) return true;\n\t}\n\treturn false;\n}\n\nfunction findFieldsInBody(fields,body) {\n\tif (Object.prototype.toString.call(body) === \"[object Array]\") {\n\t\tfor (var i = 0; i < body.length; i++) {\n\t\t\tfindFieldsInBody(fields,body[i]);\n\t\t}\n\t} else {\n\t\tfor (var k = 0; k < fields.length; k++) {\n\t\t\tif (!findFieldInBody(fields[k],body)) {\n\t\t\t\ttests[\"An element is missing the field \" + fields[k]] = false;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\treturn result;\n}\ntests[\"POST Body Response equals Request Body\"  ] = objectEquals(JSON.parse(request.data), JSON.parse(responseBody));\n\nfunction objectEquals(v1, v2) {\n\tif (typeof(v1) === \"function\") {\n\t\treturn v1.toString() === v2.toString();\n\t} else if (v1 instanceof Object && v2 instanceof Object) {\n\t\tvar r = true;\n\t\tfor (var k in v1) {\n\t\t\tr = objectEquals(v1[k], v2[k]);\n\t\t\tif (!r) {\n\t\t\t\tconsole.log(\"v1:\"+JSON.stringify(v1));\n\t\t\t\tconsole.log(\"k:\"+k+\";v2:\"+JSON.stringify(v2));\n\t\t\t\tconsole.log(\"v1[k]:\"+v1[k]+\";v2[k]:\"+v2[k]);\n\t\t\t\tconsole.log(\"JSON.stringify(v1[k]):\"+JSON.stringify(v1[k])+\";JSON.stringify(v2[k]):\"+JSON.stringify(v2[k]));\n\t\t\t\tconsole.log(\"typeof(v1[k]):\"+typeof(v1[k])+\";typeof(v2[k]):\"+typeof(v2[k]));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} else {\n\t\tif (v1 !== v2) {\n\t\t\tif (v1 === undefined || v2 === undefined) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn v1.toString() === v2.toString();\n\t\t\t}\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n}\npostman.setEnvironmentVariable(\"lastId\", JSON.parse(responseBody).id);\npostman.setEnvironmentVariable(\"lastRequest\", responseBody);\n",
      "currentHelper": "normal",
      "time": 1542642675763,
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "rawModeData": "{\"givenName\":\"Hello World\",\"familyName\":\"Hello World\"}"
    },
    {
      "id": "f28c0831-ec12-11e8-b9ad-43a9ab025a51",
      "name": "individualFind",
      "description": "",
      "headers": "Accept: application/json\nContent-Type: application/json\n",
      "headerData": [
        {
          "key": "Accept",
          "value": "application/json",
          "description": "",
          "enabled": true
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "description": "",
          "enabled": true
        }
      ],
      "url": "{{host}}{{path}}/individual",
      "folder": "f28be121-ec12-11e8-b9ad-43a9ab025a51",
      "queryParams": [],
      "preRequestScript": "",
      "method": "GET",
      "data": [],
      "dataMode": "raw",
      "version": 2,
      "tests": "tests[\"Content-Type is present \" + postman.getResponseHeader(\"Content-type\")] = postman.getResponseHeader(\"Content-type\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Response contains created resource\"] = findElementInList(postman.getEnvironmentVariable(\"lastId\"), JSON.parse(responseBody));\n\nfunction findElementInList(elementId,list) {\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (list[i].id == elementId) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n",
      "currentHelper": "normal",
      "time": 1542642675763,
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "rawModeData": ""
    },
    {
      "id": "f28c0833-ec12-11e8-b9ad-43a9ab025a51",
      "name": "organizationCreate",
      "description": "",
      "headers": "Accept: application/json\nContent-Type: application/json\n",
      "headerData": [
        {
          "key": "Accept",
          "value": "application/json",
          "description": "",
          "enabled": true
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "description": "",
          "enabled": true
        }
      ],
      "url": "{{host}}{{path}}/organization",
      "folder": "f28c0832-ec12-11e8-b9ad-43a9ab025a51",
      "queryParams": [],
      "preRequestScript": "",
      "method": "POST",
      "data": [],
      "dataMode": "raw",
      "version": 2,
      "tests": "tests[\"Content-Type is present \" + postman.getResponseHeader(\"Content-type\")] = postman.getResponseHeader(\"Content-type\");\ntests[\"Status code is 201\"] = responseCode.code === 201;\ntests[\"Response contains location header\"] = responseHeaders.hasOwnProperty(\"Location\");\ntests[\"Location header is correct\"] = responseHeaders.hasOwnProperty(\"Location\") &&\n\t(c.toString() == environment[\"path\"] + \"/organization/\" + JSON.parse(responseBody).id || //relative\n\tpostman.getResponseHeader(\"Location\").toString() == environment[\"host\"] + environment[\"path\"] + \"/organization/\" + JSON.parse(responseBody).id);   //absolute\ntests[\"Response contains all required fields\"] = findFieldsInBody([\"tradingName\",\"id\",\"href\"], JSON.parse(responseBody));\n\nfunction findFieldInBody(field,body) {\n\tfor (var key in body) {\n\t\tif (key == field) return true;\n\t}\n\treturn false;\n}\n\nfunction findFieldsInBody(fields,body) {\n\tif (Object.prototype.toString.call(body) === \"[object Array]\") {\n\t\tfor (var i = 0; i < body.length; i++) {\n\t\t\tfindFieldsInBody(fields,body[i]);\n\t\t}\n\t} else {\n\t\tfor (var k = 0; k < fields.length; k++) {\n\t\t\tif (!findFieldInBody(fields[k],body)) {\n\t\t\t\ttests[\"An element is missing the field \" + fields[k]] = false;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\treturn result;\n}\ntests[\"POST Body Response equals Request Body\"  ] = objectEquals(JSON.parse(request.data), JSON.parse(responseBody));\n\nfunction objectEquals(v1, v2) {\n\tif (typeof(v1) === \"function\") {\n\t\treturn v1.toString() === v2.toString();\n\t} else if (v1 instanceof Object && v2 instanceof Object) {\n\t\tvar r = true;\n\t\tfor (var k in v1) {\n\t\t\tr = objectEquals(v1[k], v2[k]);\n\t\t\tif (!r) {\n\t\t\t\tconsole.log(\"v1:\"+JSON.stringify(v1));\n\t\t\t\tconsole.log(\"k:\"+k+\";v2:\"+JSON.stringify(v2));\n\t\t\t\tconsole.log(\"v1[k]:\"+v1[k]+\";v2[k]:\"+v2[k]);\n\t\t\t\tconsole.log(\"JSON.stringify(v1[k]):\"+JSON.stringify(v1[k])+\";JSON.stringify(v2[k]):\"+JSON.stringify(v2[k]));\n\t\t\t\tconsole.log(\"typeof(v1[k]):\"+typeof(v1[k])+\";typeof(v2[k]):\"+typeof(v2[k]));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} else {\n\t\tif (v1 !== v2) {\n\t\t\tif (v1 === undefined || v2 === undefined) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn v1.toString() === v2.toString();\n\t\t\t}\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n}\npostman.setEnvironmentVariable(\"lastId\", JSON.parse(responseBody).id);\npostman.setEnvironmentVariable(\"lastRequest\", responseBody);\n",
      "currentHelper": "normal",
      "time": 1542642675763,
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "rawModeData": "{\"tradingName\":\"Hello World\"}"
    },
    {
      "id": "f28c2f40-ec12-11e8-b9ad-43a9ab025a51",
      "name": "organizationFind",
      "description": "",
      "headers": "Accept: application/json\nContent-Type: application/json\n",
      "headerData": [
        {
          "key": "Accept",
          "value": "application/json",
          "description": "",
          "enabled": true
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "description": "",
          "enabled": true
        }
      ],
      "url": "{{host}}{{path}}/organization",
      "folder": "f28c0832-ec12-11e8-b9ad-43a9ab025a51",
      "queryParams": [],
      "preRequestScript": "",
      "method": "GET",
      "data": [],
      "dataMode": "raw",
      "version": 2,
      "tests": "tests[\"Content-Type is present \" + postman.getResponseHeader(\"Content-type\")] = postman.getResponseHeader(\"Content-type\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Response contains created resource\"] = findElementInList(postman.getEnvironmentVariable(\"lastId\"), JSON.parse(responseBody));\n\nfunction findElementInList(elementId,list) {\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (list[i].id == elementId) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n",
      "currentHelper": "normal",
      "time": 1542642675764,
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "rawModeData": ""
    },
    {
      "id": "f28c2f42-ec12-11e8-b9ad-43a9ab025a51",
      "name": "hubCreate",
      "description": "",
      "headers": "Accept: application/json\nContent-Type: application/json\n",
      "headerData": [
        {
          "key": "Accept",
          "value": "application/json",
          "description": "",
          "enabled": true
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "description": "",
          "enabled": true
        }
      ],
      "url": "{{host}}{{path}}/hub",
      "folder": "f28c2f41-ec12-11e8-b9ad-43a9ab025a51",
      "queryParams": [],
      "preRequestScript": "",
      "method": "POST",
      "data": [],
      "dataMode": "raw",
      "version": 2,
      "tests": "tests[\"Content-Type is present \" + postman.getResponseHeader(\"Content-type\")] = postman.getResponseHeader(\"Content-type\");\ntests[\"Status code is 201\"] = responseCode.code === 201;\ntests[\"Response contains location header\"] = responseHeaders.hasOwnProperty(\"Location\");\ntests[\"Location header is correct\"] = responseHeaders.hasOwnProperty(\"Location\") &&\n\t(c.toString() == environment[\"path\"] + \"/hub/\" + JSON.parse(responseBody).id || //relative\n\tpostman.getResponseHeader(\"Location\").toString() == environment[\"host\"] + environment[\"path\"] + \"/hub/\" + JSON.parse(responseBody).id);   //absolute\ntests[\"Response contains all required fields\"] = findFieldsInBody([\"callback\",\"id\",\"href\"], JSON.parse(responseBody));\n\nfunction findFieldInBody(field,body) {\n\tfor (var key in body) {\n\t\tif (key == field) return true;\n\t}\n\treturn false;\n}\n\nfunction findFieldsInBody(fields,body) {\n\tif (Object.prototype.toString.call(body) === \"[object Array]\") {\n\t\tfor (var i = 0; i < body.length; i++) {\n\t\t\tfindFieldsInBody(fields,body[i]);\n\t\t}\n\t} else {\n\t\tfor (var k = 0; k < fields.length; k++) {\n\t\t\tif (!findFieldInBody(fields[k],body)) {\n\t\t\t\ttests[\"An element is missing the field \" + fields[k]] = false;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\treturn result;\n}\ntests[\"POST Body Response equals Request Body\"  ] = objectEquals(JSON.parse(request.data), JSON.parse(responseBody));\n\nfunction objectEquals(v1, v2) {\n\tif (typeof(v1) === \"function\") {\n\t\treturn v1.toString() === v2.toString();\n\t} else if (v1 instanceof Object && v2 instanceof Object) {\n\t\tvar r = true;\n\t\tfor (var k in v1) {\n\t\t\tr = objectEquals(v1[k], v2[k]);\n\t\t\tif (!r) {\n\t\t\t\tconsole.log(\"v1:\"+JSON.stringify(v1));\n\t\t\t\tconsole.log(\"k:\"+k+\";v2:\"+JSON.stringify(v2));\n\t\t\t\tconsole.log(\"v1[k]:\"+v1[k]+\";v2[k]:\"+v2[k]);\n\t\t\t\tconsole.log(\"JSON.stringify(v1[k]):\"+JSON.stringify(v1[k])+\";JSON.stringify(v2[k]):\"+JSON.stringify(v2[k]));\n\t\t\t\tconsole.log(\"typeof(v1[k]):\"+typeof(v1[k])+\";typeof(v2[k]):\"+typeof(v2[k]));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} else {\n\t\tif (v1 !== v2) {\n\t\t\tif (v1 === undefined || v2 === undefined) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn v1.toString() === v2.toString();\n\t\t\t}\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n}\npostman.setEnvironmentVariable(\"lastId\", JSON.parse(responseBody).id);\npostman.setEnvironmentVariable(\"lastRequest\", responseBody);\n",
      "currentHelper": "normal",
      "time": 1542642675764,
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "rawModeData": "{\"callback\":\"Hello World\"}"
    },
    {
      "id": "f28c2f43-ec12-11e8-b9ad-43a9ab025a51",
      "name": "hubFind",
      "description": "",
      "headers": "Accept: application/json\nContent-Type: application/json\n",
      "headerData": [
        {
          "key": "Accept",
          "value": "application/json",
          "description": "",
          "enabled": true
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "description": "",
          "enabled": true
        }
      ],
      "url": "{{host}}{{path}}/hub",
      "folder": "f28c2f41-ec12-11e8-b9ad-43a9ab025a51",
      "queryParams": [],
      "preRequestScript": "",
      "method": "GET",
      "data": [],
      "dataMode": "raw",
      "version": 2,
      "tests": "tests[\"Content-Type is present \" + postman.getResponseHeader(\"Content-type\")] = postman.getResponseHeader(\"Content-type\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Response contains created resource\"] = findElementInList(postman.getEnvironmentVariable(\"lastId\"), JSON.parse(responseBody));\n\nfunction findElementInList(elementId,list) {\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (list[i].id == elementId) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n",
      "currentHelper": "normal",
      "time": 1542642675764,
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "rawModeData": ""
    },
    {
      "id": "f28c2f45-ec12-11e8-b9ad-43a9ab025a51",
      "name": "individualCreate with missing givenName",
      "description": "",
      "headers": "Accept: application/json\nContent-Type: application/json\n",
      "headerData": [
        {
          "key": "Accept",
          "value": "application/json",
          "description": "",
          "enabled": true
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "description": "",
          "enabled": true
        }
      ],
      "url": "{{host}}{{path}}/individual",
      "folder": "f28c2f44-ec12-11e8-b9ad-43a9ab025a51",
      "queryParams": [],
      "preRequestScript": "",
      "method": "POST",
      "data": [],
      "dataMode": "raw",
      "version": 2,
      "tests": "tests[\"Content-Type is present \" + postman.getResponseHeader(\"Content-type\")] = postman.getResponseHeader(\"Content-type\");\ntests[\"Status code is an error\"] = responseCode.code >= 400;\n",
      "currentHelper": "normal",
      "time": 1542642675764,
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "rawModeData": "{\"familyName\":\"Hello World\"}"
    },
    {
      "id": "f28c2f46-ec12-11e8-b9ad-43a9ab025a51",
      "name": "individualCreate with missing familyName",
      "description": "",
      "headers": "Accept: application/json\nContent-Type: application/json\n",
      "headerData": [
        {
          "key": "Accept",
          "value": "application/json",
          "description": "",
          "enabled": true
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "description": "",
          "enabled": true
        }
      ],
      "url": "{{host}}{{path}}/individual",
      "folder": "f28c2f44-ec12-11e8-b9ad-43a9ab025a51",
      "queryParams": [],
      "preRequestScript": "",
      "method": "POST",
      "data": [],
      "dataMode": "raw",
      "version": 2,
      "tests": "tests[\"Content-Type is present \" + postman.getResponseHeader(\"Content-type\")] = postman.getResponseHeader(\"Content-type\");\ntests[\"Status code is an error\"] = responseCode.code >= 400;\n",
      "currentHelper": "normal",
      "time": 1542642675764,
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "rawModeData": "{\"givenName\":\"Hello World\"}"
    },
    {
      "id": "f28c2f48-ec12-11e8-b9ad-43a9ab025a51",
      "name": "organizationCreate with missing tradingName",
      "description": "",
      "headers": "Accept: application/json\nContent-Type: application/json\n",
      "headerData": [
        {
          "key": "Accept",
          "value": "application/json",
          "description": "",
          "enabled": true
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "description": "",
          "enabled": true
        }
      ],
      "url": "{{host}}{{path}}/organization",
      "folder": "f28c2f47-ec12-11e8-b9ad-43a9ab025a51",
      "queryParams": [],
      "preRequestScript": "",
      "method": "POST",
      "data": [],
      "dataMode": "raw",
      "version": 2,
      "tests": "tests[\"Content-Type is present \" + postman.getResponseHeader(\"Content-type\")] = postman.getResponseHeader(\"Content-type\");\ntests[\"Status code is an error\"] = responseCode.code >= 400;\n",
      "currentHelper": "normal",
      "time": 1542642675764,
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "rawModeData": "{}"
    },
    {
      "id": "f28c2f4a-ec12-11e8-b9ad-43a9ab025a51",
      "name": "hubCreate with missing callback",
      "description": "",
      "headers": "Accept: application/json\nContent-Type: application/json\n",
      "headerData": [
        {
          "key": "Accept",
          "value": "application/json",
          "description": "",
          "enabled": true
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "description": "",
          "enabled": true
        }
      ],
      "url": "{{host}}{{path}}/hub",
      "folder": "f28c2f49-ec12-11e8-b9ad-43a9ab025a51",
      "queryParams": [],
      "preRequestScript": "",
      "method": "POST",
      "data": [],
      "dataMode": "raw",
      "version": 2,
      "tests": "tests[\"Content-Type is present \" + postman.getResponseHeader(\"Content-type\")] = postman.getResponseHeader(\"Content-type\");\ntests[\"Status code is an error\"] = responseCode.code >= 400;\n",
      "currentHelper": "normal",
      "time": 1542642675764,
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "rawModeData": "{}"
    },
    {
      "id": "f28c2f4c-ec12-11e8-b9ad-43a9ab025a51",
      "name": "individualCreate",
      "description": "",
      "headers": "Accept: application/json\nContent-Type: application/json\n",
      "headerData": [
        {
          "key": "Accept",
          "value": "application/json",
          "description": "",
          "enabled": true
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "description": "",
          "enabled": true
        }
      ],
      "url": "{{host}}{{path}}/individual",
      "folder": "f28c2f4b-ec12-11e8-b9ad-43a9ab025a51",
      "queryParams": [],
      "preRequestScript": "",
      "method": "POST",
      "data": [],
      "dataMode": "raw",
      "version": 2,
      "tests": "tests[\"Content-Type is present \" + postman.getResponseHeader(\"Content-type\")] = postman.getResponseHeader(\"Content-type\");\ntests[\"Status code is 201\"] = responseCode.code === 201;\ntests[\"Response contains location header\"] = responseHeaders.hasOwnProperty(\"Location\");\ntests[\"Location header is correct\"] = responseHeaders.hasOwnProperty(\"Location\") &&\n\t(c.toString() == environment[\"path\"] + \"/individual/\" + JSON.parse(responseBody).id || //relative\n\tpostman.getResponseHeader(\"Location\").toString() == environment[\"host\"] + environment[\"path\"] + \"/individual/\" + JSON.parse(responseBody).id);   //absolute\ntests[\"Response contains all required fields\"] = findFieldsInBody([\"givenName\",\"familyName\",\"id\",\"href\"], JSON.parse(responseBody));\n\nfunction findFieldInBody(field,body) {\n\tfor (var key in body) {\n\t\tif (key == field) return true;\n\t}\n\treturn false;\n}\n\nfunction findFieldsInBody(fields,body) {\n\tif (Object.prototype.toString.call(body) === \"[object Array]\") {\n\t\tfor (var i = 0; i < body.length; i++) {\n\t\t\tfindFieldsInBody(fields,body[i]);\n\t\t}\n\t} else {\n\t\tfor (var k = 0; k < fields.length; k++) {\n\t\t\tif (!findFieldInBody(fields[k],body)) {\n\t\t\t\ttests[\"An element is missing the field \" + fields[k]] = false;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\treturn result;\n}\ntests[\"POST Body Response equals Request Body\"  ] = objectEquals(JSON.parse(request.data), JSON.parse(responseBody));\n\nfunction objectEquals(v1, v2) {\n\tif (typeof(v1) === \"function\") {\n\t\treturn v1.toString() === v2.toString();\n\t} else if (v1 instanceof Object && v2 instanceof Object) {\n\t\tvar r = true;\n\t\tfor (var k in v1) {\n\t\t\tr = objectEquals(v1[k], v2[k]);\n\t\t\tif (!r) {\n\t\t\t\tconsole.log(\"v1:\"+JSON.stringify(v1));\n\t\t\t\tconsole.log(\"k:\"+k+\";v2:\"+JSON.stringify(v2));\n\t\t\t\tconsole.log(\"v1[k]:\"+v1[k]+\";v2[k]:\"+v2[k]);\n\t\t\t\tconsole.log(\"JSON.stringify(v1[k]):\"+JSON.stringify(v1[k])+\";JSON.stringify(v2[k]):\"+JSON.stringify(v2[k]));\n\t\t\t\tconsole.log(\"typeof(v1[k]):\"+typeof(v1[k])+\";typeof(v2[k]):\"+typeof(v2[k]));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} else {\n\t\tif (v1 !== v2) {\n\t\t\tif (v1 === undefined || v2 === undefined) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn v1.toString() === v2.toString();\n\t\t\t}\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n}\npostman.setEnvironmentVariable(\"lastId\", JSON.parse(responseBody).id);\npostman.setEnvironmentVariable(\"lastRequest\", responseBody);\n",
      "currentHelper": "normal",
      "time": 1542642675764,
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "rawModeData": "{\"gender\":\"Hello World\",\"placeOfBirth\":\"Hello World\",\"countryOfBirth\":\"Hello World\",\"nationality\":\"Hello World\",\"maritalStatus\":\"Hello World\",\"birthDate\":\"1973-10-10T09:10:00Z\",\"title\":\"Hello World\",\"givenName\":\"Hello World\",\"familyName\":\"Hello World\",\"middleName\":\"Hello World\",\"fullName\":\"Hello World\",\"formattedName\":\"Hello World\",\"location\":\"Hello World\",\"status\":\"Hello World\",\"disability\":[{\"disability\":\"Hello World\"}],\"characteristic\":[{\"name\":\"Hello World\",\"value\":\"Hello World\"}],\"otherName\":[{\"title\":\"Hello World\",\"givenName\":\"Hello World\",\"familyName\":\"Hello World\",\"middleName\":\"Hello World\",\"fullName\":\"Hello World\",\"formattedName\":\"Hello World\",\"validFor\":{\"startDateTime\":\"1973-10-10T09:10:00Z\",\"endDateTime\":\"1973-10-10T09:10:00Z\"},\"nameType\":\"Hello World\",\"tradingName\":\"Hello World\"}],\"individualIdentification\":[{\"type\":\"Hello World\",\"identificationId\":\"Hello World\",\"issuingAuthority\":\"Hello World\",\"issuingDate\":\"1973-10-10T09:10:00Z\"}],\"externalReference\":[{\"href\":\"Hello World\",\"type\":\"Hello World\"}],\"relatedParty\":[{\"id\":\"Hello World\",\"href\":\"Hello World\",\"role\":\"Hello World\",\"name\":\"Hello World\",\"validFor\":{\"startDateTime\":\"1973-10-10T09:10:00Z\",\"endDateTime\":\"1973-10-10T09:10:00Z\"}}],\"contactMedium\":[{\"type\":\"Hello World\",\"validFor\":{\"startDateTime\":\"1973-10-10T09:10:00Z\",\"endDateTime\":\"1973-10-10T09:10:00Z\"},\"medium\":{\"city\":\"Hello World\",\"country\":\"Hello World\",\"postcode\":\"Hello World\",\"stateOrProvince\":\"Hello World\",\"streetOne\":\"Hello World\",\"streetTwo\":\"Hello World\",\"emailAddress\":\"Hello World\",\"type\":\"Hello World\",\"number\":\"Hello World\"},\"preferred\":true}]}"
    },
    {
      "id": "f28c5650-ec12-11e8-b9ad-43a9ab025a51",
      "name": "individualFind",
      "description": "",
      "headers": "Accept: application/json\nContent-Type: application/json\n",
      "headerData": [
        {
          "key": "Accept",
          "value": "application/json",
          "description": "",
          "enabled": true
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "description": "",
          "enabled": true
        }
      ],
      "url": "{{host}}{{path}}/individual",
      "folder": "f28c2f4b-ec12-11e8-b9ad-43a9ab025a51",
      "queryParams": [],
      "preRequestScript": "",
      "method": "GET",
      "data": [],
      "dataMode": "raw",
      "version": 2,
      "tests": "tests[\"Content-Type is present \" + postman.getResponseHeader(\"Content-type\")] = postman.getResponseHeader(\"Content-type\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Response contains created resource\"] = findElementInList(postman.getEnvironmentVariable(\"lastId\"), JSON.parse(responseBody));\n\nfunction findElementInList(elementId,list) {\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (list[i].id == elementId) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n",
      "currentHelper": "normal",
      "time": 1542642675765,
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "rawModeData": ""
    },
    {
      "id": "f28c5651-ec12-11e8-b9ad-43a9ab025a51",
      "name": "individualFind with mandory fields",
      "description": "",
      "headers": "Accept: application/json\nContent-Type: application/json\n",
      "headerData": [
        {
          "key": "Accept",
          "value": "application/json",
          "description": "",
          "enabled": true
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "description": "",
          "enabled": true
        }
      ],
      "url": "{{host}}{{path}}/individual?fields=givenName,familyName",
      "folder": "f28c2f4b-ec12-11e8-b9ad-43a9ab025a51",
      "queryParams": [],
      "preRequestScript": "",
      "method": "GET",
      "data": [],
      "dataMode": "raw",
      "version": 2,
      "tests": "tests[\"Content-Type is present \" + postman.getResponseHeader(\"Content-type\")] = postman.getResponseHeader(\"Content-type\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Response contains created resource\"] = findElementInList(postman.getEnvironmentVariable(\"lastId\"), JSON.parse(responseBody));\ntests[\"Response only contains chosen fields\"] = checkFieldsInArray([\"givenName\",\"familyName\",\"id\",\"href\"], JSON.parse(responseBody));\n\nfunction findElementInList(elementId,list) {\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (list[i].id == elementId) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction checkFieldsInArray(fields, body) {\n\tfor (var i = 0; i < body.length; i++) {\n\t\tif (!checkFields(fields,body[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction checkFields(fields,body) {\n\tfor (var key in body) {\n\t\tif (fields.indexOf(key) < 0) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\ttests[key + \" exists\"] = true;\n\t\t}\n\t}\n\treturn true;\n}\n",
      "currentHelper": "normal",
      "time": 1542642675765,
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "rawModeData": ""
    },
    {
      "id": "f28c5653-ec12-11e8-b9ad-43a9ab025a51",
      "name": "organizationCreate",
      "description": "",
      "headers": "Accept: application/json\nContent-Type: application/json\n",
      "headerData": [
        {
          "key": "Accept",
          "value": "application/json",
          "description": "",
          "enabled": true
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "description": "",
          "enabled": true
        }
      ],
      "url": "{{host}}{{path}}/organization",
      "folder": "f28c5652-ec12-11e8-b9ad-43a9ab025a51",
      "queryParams": [],
      "preRequestScript": "",
      "method": "POST",
      "data": [],
      "dataMode": "raw",
      "version": 2,
      "tests": "tests[\"Content-Type is present \" + postman.getResponseHeader(\"Content-type\")] = postman.getResponseHeader(\"Content-type\");\ntests[\"Status code is 201\"] = responseCode.code === 201;\ntests[\"Response contains location header\"] = responseHeaders.hasOwnProperty(\"Location\");\ntests[\"Location header is correct\"] = responseHeaders.hasOwnProperty(\"Location\") &&\n\t(c.toString() == environment[\"path\"] + \"/organization/\" + JSON.parse(responseBody).id || //relative\n\tpostman.getResponseHeader(\"Location\").toString() == environment[\"host\"] + environment[\"path\"] + \"/organization/\" + JSON.parse(responseBody).id);   //absolute\ntests[\"Response contains all required fields\"] = findFieldsInBody([\"tradingName\",\"id\",\"href\"], JSON.parse(responseBody));\n\nfunction findFieldInBody(field,body) {\n\tfor (var key in body) {\n\t\tif (key == field) return true;\n\t}\n\treturn false;\n}\n\nfunction findFieldsInBody(fields,body) {\n\tif (Object.prototype.toString.call(body) === \"[object Array]\") {\n\t\tfor (var i = 0; i < body.length; i++) {\n\t\t\tfindFieldsInBody(fields,body[i]);\n\t\t}\n\t} else {\n\t\tfor (var k = 0; k < fields.length; k++) {\n\t\t\tif (!findFieldInBody(fields[k],body)) {\n\t\t\t\ttests[\"An element is missing the field \" + fields[k]] = false;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\treturn result;\n}\ntests[\"POST Body Response equals Request Body\"  ] = objectEquals(JSON.parse(request.data), JSON.parse(responseBody));\n\nfunction objectEquals(v1, v2) {\n\tif (typeof(v1) === \"function\") {\n\t\treturn v1.toString() === v2.toString();\n\t} else if (v1 instanceof Object && v2 instanceof Object) {\n\t\tvar r = true;\n\t\tfor (var k in v1) {\n\t\t\tr = objectEquals(v1[k], v2[k]);\n\t\t\tif (!r) {\n\t\t\t\tconsole.log(\"v1:\"+JSON.stringify(v1));\n\t\t\t\tconsole.log(\"k:\"+k+\";v2:\"+JSON.stringify(v2));\n\t\t\t\tconsole.log(\"v1[k]:\"+v1[k]+\";v2[k]:\"+v2[k]);\n\t\t\t\tconsole.log(\"JSON.stringify(v1[k]):\"+JSON.stringify(v1[k])+\";JSON.stringify(v2[k]):\"+JSON.stringify(v2[k]));\n\t\t\t\tconsole.log(\"typeof(v1[k]):\"+typeof(v1[k])+\";typeof(v2[k]):\"+typeof(v2[k]));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} else {\n\t\tif (v1 !== v2) {\n\t\t\tif (v1 === undefined || v2 === undefined) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn v1.toString() === v2.toString();\n\t\t\t}\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n}\npostman.setEnvironmentVariable(\"lastId\", JSON.parse(responseBody).id);\npostman.setEnvironmentVariable(\"lastRequest\", responseBody);\n",
      "currentHelper": "normal",
      "time": 1542642675765,
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "rawModeData": "{\"isLegalEntity\":true,\"type\":\"Hello World\",\"existsDuring\":{\"startDateTime\":\"1973-10-10T09:10:00Z\",\"endDateTime\":\"1973-10-10T09:10:00Z\"},\"tradingName\":\"Hello World\",\"nameType\":\"Hello World\",\"status\":\"Hello World\",\"otherName\":{\"title\":\"Hello World\",\"givenName\":\"Hello World\",\"familyName\":\"Hello World\",\"middleName\":\"Hello World\",\"fullName\":\"Hello World\",\"formattedName\":\"Hello World\",\"validFor\":{\"startDateTime\":\"1973-10-10T09:10:00Z\",\"endDateTime\":\"1973-10-10T09:10:00Z\"},\"nameType\":\"Hello World\",\"tradingName\":\"Hello World\"},\"characteristic\":[{\"name\":\"Hello World\",\"value\":\"Hello World\"}],\"organizationIdentification\":[{\"type\":\"Hello World\",\"identificationId\":\"Hello World\",\"issuingAuthority\":\"Hello World\",\"issuingDate\":\"1973-10-10T09:10:00Z\",\"validFor\":{\"startDateTime\":\"1973-10-10T09:10:00Z\",\"endDateTime\":\"1973-10-10T09:10:00Z\"}}],\"externalReference\":[{\"href\":\"Hello World\",\"type\":\"Hello World\"}],\"relatedParty\":[{\"id\":\"Hello World\",\"href\":\"Hello World\",\"role\":\"Hello World\",\"name\":\"Hello World\",\"validFor\":{\"startDateTime\":\"1973-10-10T09:10:00Z\",\"endDateTime\":\"1973-10-10T09:10:00Z\"}}],\"organizationParentRelationship\":{\"relationshipType\":\"Hello World\",\"id\":\"Hello World\",\"href\":\"Hello World\",\"validFor\":{\"startDateTime\":\"1973-10-10T09:10:00Z\",\"endDateTime\":\"1973-10-10T09:10:00Z\"}},\"organizationChildRelationship\":[{\"relationshipType\":\"Hello World\",\"id\":\"Hello World\",\"href\":\"Hello World\",\"validFor\":{\"startDateTime\":\"1973-10-10T09:10:00Z\",\"endDateTime\":\"1973-10-10T09:10:00Z\"}}],\"contactMedium\":[{\"type\":\"Hello World\",\"validFor\":{\"startDateTime\":\"1973-10-10T09:10:00Z\",\"endDateTime\":\"1973-10-10T09:10:00Z\"},\"medium\":{\"city\":\"Hello World\",\"country\":\"Hello World\",\"postcode\":\"Hello World\",\"stateOrProvince\":\"Hello World\",\"streetOne\":\"Hello World\",\"streetTwo\":\"Hello World\",\"emailAddress\":\"Hello World\",\"type\":\"Hello World\",\"number\":\"Hello World\"},\"preferred\":true}]}"
    },
    {
      "id": "f28c5654-ec12-11e8-b9ad-43a9ab025a51",
      "name": "organizationFind",
      "description": "",
      "headers": "Accept: application/json\nContent-Type: application/json\n",
      "headerData": [
        {
          "key": "Accept",
          "value": "application/json",
          "description": "",
          "enabled": true
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "description": "",
          "enabled": true
        }
      ],
      "url": "{{host}}{{path}}/organization",
      "folder": "f28c5652-ec12-11e8-b9ad-43a9ab025a51",
      "queryParams": [],
      "preRequestScript": "",
      "method": "GET",
      "data": [],
      "dataMode": "raw",
      "version": 2,
      "tests": "tests[\"Content-Type is present \" + postman.getResponseHeader(\"Content-type\")] = postman.getResponseHeader(\"Content-type\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Response contains created resource\"] = findElementInList(postman.getEnvironmentVariable(\"lastId\"), JSON.parse(responseBody));\n\nfunction findElementInList(elementId,list) {\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (list[i].id == elementId) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n",
      "currentHelper": "normal",
      "time": 1542642675765,
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "rawModeData": ""
    },
    {
      "id": "f28c5655-ec12-11e8-b9ad-43a9ab025a51",
      "name": "organizationFind with mandory fields",
      "description": "",
      "headers": "Accept: application/json\nContent-Type: application/json\n",
      "headerData": [
        {
          "key": "Accept",
          "value": "application/json",
          "description": "",
          "enabled": true
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "description": "",
          "enabled": true
        }
      ],
      "url": "{{host}}{{path}}/organization?fields=tradingName",
      "folder": "f28c5652-ec12-11e8-b9ad-43a9ab025a51",
      "queryParams": [],
      "preRequestScript": "",
      "method": "GET",
      "data": [],
      "dataMode": "raw",
      "version": 2,
      "tests": "tests[\"Content-Type is present \" + postman.getResponseHeader(\"Content-type\")] = postman.getResponseHeader(\"Content-type\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Response contains created resource\"] = findElementInList(postman.getEnvironmentVariable(\"lastId\"), JSON.parse(responseBody));\ntests[\"Response only contains chosen fields\"] = checkFieldsInArray([\"tradingName\",\"id\",\"href\"], JSON.parse(responseBody));\n\nfunction findElementInList(elementId,list) {\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (list[i].id == elementId) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nfunction checkFieldsInArray(fields, body) {\n\tfor (var i = 0; i < body.length; i++) {\n\t\tif (!checkFields(fields,body[i])) {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction checkFields(fields,body) {\n\tfor (var key in body) {\n\t\tif (fields.indexOf(key) < 0) {\n\t\t\treturn false;\n\t\t} else {\n\t\t\ttests[key + \" exists\"] = true;\n\t\t}\n\t}\n\treturn true;\n}\n",
      "currentHelper": "normal",
      "time": 1542642675765,
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "rawModeData": ""
    },
    {
      "id": "f28c5657-ec12-11e8-b9ad-43a9ab025a51",
      "name": "hubCreate",
      "description": "",
      "headers": "Accept: application/json\nContent-Type: application/json\n",
      "headerData": [
        {
          "key": "Accept",
          "value": "application/json",
          "description": "",
          "enabled": true
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "description": "",
          "enabled": true
        }
      ],
      "url": "{{host}}{{path}}/hub",
      "folder": "f28c5656-ec12-11e8-b9ad-43a9ab025a51",
      "queryParams": [],
      "preRequestScript": "",
      "method": "POST",
      "data": [],
      "dataMode": "raw",
      "version": 2,
      "tests": "tests[\"Content-Type is present \" + postman.getResponseHeader(\"Content-type\")] = postman.getResponseHeader(\"Content-type\");\ntests[\"Status code is 201\"] = responseCode.code === 201;\ntests[\"Response contains location header\"] = responseHeaders.hasOwnProperty(\"Location\");\ntests[\"Location header is correct\"] = responseHeaders.hasOwnProperty(\"Location\") &&\n\t(c.toString() == environment[\"path\"] + \"/hub/\" + JSON.parse(responseBody).id || //relative\n\tpostman.getResponseHeader(\"Location\").toString() == environment[\"host\"] + environment[\"path\"] + \"/hub/\" + JSON.parse(responseBody).id);   //absolute\ntests[\"Response contains all required fields\"] = findFieldsInBody([\"callback\",\"id\",\"href\"], JSON.parse(responseBody));\n\nfunction findFieldInBody(field,body) {\n\tfor (var key in body) {\n\t\tif (key == field) return true;\n\t}\n\treturn false;\n}\n\nfunction findFieldsInBody(fields,body) {\n\tif (Object.prototype.toString.call(body) === \"[object Array]\") {\n\t\tfor (var i = 0; i < body.length; i++) {\n\t\t\tfindFieldsInBody(fields,body[i]);\n\t\t}\n\t} else {\n\t\tfor (var k = 0; k < fields.length; k++) {\n\t\t\tif (!findFieldInBody(fields[k],body)) {\n\t\t\t\ttests[\"An element is missing the field \" + fields[k]] = false;\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\treturn result;\n}\ntests[\"POST Body Response equals Request Body\"  ] = objectEquals(JSON.parse(request.data), JSON.parse(responseBody));\n\nfunction objectEquals(v1, v2) {\n\tif (typeof(v1) === \"function\") {\n\t\treturn v1.toString() === v2.toString();\n\t} else if (v1 instanceof Object && v2 instanceof Object) {\n\t\tvar r = true;\n\t\tfor (var k in v1) {\n\t\t\tr = objectEquals(v1[k], v2[k]);\n\t\t\tif (!r) {\n\t\t\t\tconsole.log(\"v1:\"+JSON.stringify(v1));\n\t\t\t\tconsole.log(\"k:\"+k+\";v2:\"+JSON.stringify(v2));\n\t\t\t\tconsole.log(\"v1[k]:\"+v1[k]+\";v2[k]:\"+v2[k]);\n\t\t\t\tconsole.log(\"JSON.stringify(v1[k]):\"+JSON.stringify(v1[k])+\";JSON.stringify(v2[k]):\"+JSON.stringify(v2[k]));\n\t\t\t\tconsole.log(\"typeof(v1[k]):\"+typeof(v1[k])+\";typeof(v2[k]):\"+typeof(v2[k]));\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t} else {\n\t\tif (v1 !== v2) {\n\t\t\tif (v1 === undefined || v2 === undefined) {\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn v1.toString() === v2.toString();\n\t\t\t}\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n}\npostman.setEnvironmentVariable(\"lastId\", JSON.parse(responseBody).id);\npostman.setEnvironmentVariable(\"lastRequest\", responseBody);\n",
      "currentHelper": "normal",
      "time": 1542642675765,
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "rawModeData": "{\"callback\":\"Hello World\",\"query\":\"Hello World\"}"
    },
    {
      "id": "f28c5658-ec12-11e8-b9ad-43a9ab025a51",
      "name": "hubFind",
      "description": "",
      "headers": "Accept: application/json\nContent-Type: application/json\n",
      "headerData": [
        {
          "key": "Accept",
          "value": "application/json",
          "description": "",
          "enabled": true
        },
        {
          "key": "Content-Type",
          "value": "application/json",
          "description": "",
          "enabled": true
        }
      ],
      "url": "{{host}}{{path}}/hub",
      "folder": "f28c5656-ec12-11e8-b9ad-43a9ab025a51",
      "queryParams": [],
      "preRequestScript": "",
      "method": "GET",
      "data": [],
      "dataMode": "raw",
      "version": 2,
      "tests": "tests[\"Content-Type is present \" + postman.getResponseHeader(\"Content-type\")] = postman.getResponseHeader(\"Content-type\");\ntests[\"Status code is 200\"] = responseCode.code === 200;\ntests[\"Response contains created resource\"] = findElementInList(postman.getEnvironmentVariable(\"lastId\"), JSON.parse(responseBody));\n\nfunction findElementInList(elementId,list) {\n\tfor (var i = 0; i < list.length; i++) {\n\t\tif (list[i].id == elementId) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n",
      "currentHelper": "normal",
      "time": 1542642675765,
      "collectionId": "f28be120-ec12-11e8-b9ad-43a9ab025a51",
      "rawModeData": ""
    }
  ]
}
